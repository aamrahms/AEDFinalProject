/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.NUPD;

import Business.Complaint.Complaint;
import Business.Complaint.ComplaintDirectory;
import Business.EcoSystem;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aamrah
 */
public class ChiefOfficerJPanel extends javax.swing.JPanel 
{

    /**
     * Creates new form ChiefOfficerJPanel
     */
    JPanel userProcessContainer;
    UserAccount account;
    EcoSystem system;
    ArrayList<Complaint> complaintDirectory;
    DefaultTableModel md;
    
    public ChiefOfficerJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem system) 
    {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.account=account;
        this.system=system;
        this.complaintDirectory= this.system.getComplaintDirectory().getComplaintList();
        
        populateTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void populateTable()
    {
        
        md=(DefaultTableModel)tblComplaints.getModel();
        md.setRowCount(0);
        Object row[]= new Object[8];
        
        for(Complaint c : complaintDirectory)
        {
            if(c.getTypeOfComplaint().equalsIgnoreCase("Emergency"))
            {
                row[0]=c.getComplaintID();
                row[1]=c.getTypeOfComplaint();
                row[2]=c.getTypeOfIncident();
                row[3]=c.getVictimStudent().getName();
                if(c.getAccusedStudent()==null)
                {
                    row[4]=" ";
                }
                else
                {
                    row[4]=c.getAccusedStudent().getName();
                }
                
                row[5]=c.getLocation();
                row[6]=c.getVictimStudent().getPhone();
                row[7]=c.getStatus();
//                row[7]=c.getNatureOfIncident();
                md.addRow(row);
            }
            else
            {
                row[0]=c.getComplaintID();
                row[1]=c.getTypeOfComplaint();
                row[2]=c.getVictimStudent().getName();
                row[3]=c.getAccusedStudent().getName();
                row[4]=c.getLocation();
                row[5]=c.getVictimStudent().getPhone();
                md.addRow(row);
            }
            
                   
        }
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblComplaints = new javax.swing.JTable();
        lblHeading = new javax.swing.JLabel();
        btnPoliceOfficer = new javax.swing.JButton();
        btnUhcs = new javax.swing.JButton();
        btnRedeye = new javax.swing.JButton();
        btnOUEC = new javax.swing.JButton();
        lblAssign = new javax.swing.JLabel();

        tblComplaints.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Complaint ID", "Priority", "Type of Incident", "Victim", "Accused", "Location", "Contact", "Status"
            }
        ));
        jScrollPane1.setViewportView(tblComplaints);

        lblHeading.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        lblHeading.setText("All Complaints");

        btnPoliceOfficer.setText("Police Officer");
        btnPoliceOfficer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPoliceOfficerActionPerformed(evt);
            }
        });

        btnUhcs.setText("University Health & Counselling Services");
        btnUhcs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUhcsActionPerformed(evt);
            }
        });

        btnRedeye.setText("RedEye Support");
        btnRedeye.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRedeyeActionPerformed(evt);
            }
        });

        btnOUEC.setText("Office of Equity and Compliance");
        btnOUEC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOUECActionPerformed(evt);
            }
        });

        lblAssign.setText("Assign to :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(333, 333, 333)
                        .addComponent(lblHeading))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAssign)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 993, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(btnPoliceOfficer)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnRedeye))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(btnUhcs)
                                    .addGap(150, 150, 150)
                                    .addComponent(btnOUEC))))))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lblHeading)
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(lblAssign)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPoliceOfficer)
                    .addComponent(btnRedeye))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUhcs)
                    .addComponent(btnOUEC))
                .addContainerGap(102, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void btnPoliceOfficerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPoliceOfficerActionPerformed
        // TODO add your handling code here:
            int selectedRow =tblComplaints.getSelectedRow();
            if (selectedRow < 0) {
                JOptionPane.showMessageDialog(null, "Please pick a complaint to assign to Police Officer!", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else{
                Complaint complaint= this.complaintDirectory.get(selectedRow);
                //String receiver=complaint.getReceiver();
            if(complaint.getStatus().equalsIgnoreCase("FreshCase")/* && complaint.getSender().equals("")*/)
            {
                PoliceOfficerAssignJPanel policePanel= new PoliceOfficerAssignJPanel(userProcessContainer, account, system, complaint);
                userProcessContainer.add("AssignPoliceOfficer",policePanel);
                CardLayout cardlayout= (CardLayout) userProcessContainer.getLayout();
                cardlayout.next(userProcessContainer);
            }
//            else if (receiver.equalsIgnoreCase("PoliceOfficer")){
//                JOptionPane.showMessageDialog(null, "Complaint is already assigned to a Police Officer, select another complaint to assign", "Warning", JOptionPane.WARNING_MESSAGE);
//       
//            }
//            else if(receiver.equalsIgnoreCase("Receptionist") || receiver.equalsIgnoreCase("Doctor") || receiver.equalsIgnoreCase("Advisor"))
//            {
//                JOptionPane.showMessageDialog(null, "Complaint is already assigned to a UHCS, select another complaint to assign", "Warning", JOptionPane.WARNING_MESSAGE);
//            }
//            else if(receiver.equalsIgnoreCase("President") || receiver.equalsIgnoreCase("OUECCoordinator") || receiver.equalsIgnoreCase("OUECInvestigator"))
//            {
//                JOptionPane.showMessageDialog(null, "Complaint is already assigned to a OUEC, select another complaint to assign", "Warning", JOptionPane.WARNING_MESSAGE);
//            }
//            else if(receiver.equalsIgnoreCase("Driver"))
//            {
//                JOptionPane.showMessageDialog(null, "Complaint is already assigned to a RedEye support, select another complaint to assign", "Warning", JOptionPane.WARNING_MESSAGE);
//            }
            else if (complaint.getStatus().equalsIgnoreCase("AssignedToPoliceOfficer") || complaint.getStatus().equalsIgnoreCase("AssignedToUHCS")|| complaint.getStatus().equalsIgnoreCase("AssignedToRedeye") || complaint.getStatus().equalsIgnoreCase("AssignedToOUEC"))
            {
                JOptionPane.showMessageDialog(null, "Complaint is already assigned, check Status! select another complaint to assign", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else 
            {
                JOptionPane.showMessageDialog(null, "Case already closed, select another complaint to assign", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            
            
        }
         
    }//GEN-LAST:event_btnPoliceOfficerActionPerformed

    private void btnRedeyeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRedeyeActionPerformed
        // TODO add your handling code here:
        int selectedRow =tblComplaints.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please pick a complaint to assign to Redeye support!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{
            Complaint complaint= this.complaintDirectory.get(selectedRow);
            //String receiver=complaint.getReceiver();
            if(complaint.getStatus().equalsIgnoreCase("FreshCase"))
            {
                DriverAssignJPanel driverPanel= new DriverAssignJPanel(userProcessContainer, account, system, complaint);
                userProcessContainer.add("AssignDriver",driverPanel);
                CardLayout cardlayout= (CardLayout) userProcessContainer.getLayout();
                cardlayout.next(userProcessContainer);
            }
            else if (complaint.getStatus().equalsIgnoreCase("AssignedToPoliceOfficer") || complaint.getStatus().equalsIgnoreCase("AssignedToUHCS")|| complaint.getStatus().equalsIgnoreCase("AssignedToRedeye") || complaint.getStatus().equalsIgnoreCase("AssignedToOUEC"))
            {
                JOptionPane.showMessageDialog(null, "Complaint is already assigned, check Status! select another complaint to assign", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else 
            {
                JOptionPane.showMessageDialog(null, "Case already closed, select another complaint to assign", "Warning", JOptionPane.WARNING_MESSAGE);
            }
         
        }
    }//GEN-LAST:event_btnRedeyeActionPerformed

    private void btnUhcsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUhcsActionPerformed
        // TODO add your handling code here:
        int selectedRow =tblComplaints.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please pick a complaint to assign to UHCS!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{
            Complaint complaint= this.complaintDirectory.get(selectedRow);
            
            if(complaint.getStatus().equalsIgnoreCase("FreshCase"))
            {
                
                complaint.setStatus("AssignedToUHCS");
                JOptionPane.showMessageDialog(this, "Complaint assigned to Officer University of Health and Counselling Services");
               
            }
            else if (complaint.getStatus().equalsIgnoreCase("AssignedToPoliceOfficer") || complaint.getStatus().equalsIgnoreCase("AssignedToUHCS")|| complaint.getStatus().equalsIgnoreCase("AssignedToRedeye") || complaint.getStatus().equalsIgnoreCase("AssignedToOUEC"))
            {
                JOptionPane.showMessageDialog(null, "Complaint is already assigned, check Status! select another complaint to assign", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else 
            {
                JOptionPane.showMessageDialog(null, "Case already closed, select another complaint to assign", "Warning", JOptionPane.WARNING_MESSAGE);
            }
         
        }
    }//GEN-LAST:event_btnUhcsActionPerformed

    private void btnOUECActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOUECActionPerformed
        // TODO add your handling code here:
        int selectedRow =tblComplaints.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please pick a complaint to assign to Office of User Equity and Compliance !", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{
            Complaint complaint= this.complaintDirectory.get(selectedRow);
            //String receiver=complaint.getReceiver();
            if(complaint.getStatus().equalsIgnoreCase("FreshCase"))
            {
               complaint.setStatus("AssignedToOUEC");
               JOptionPane.showMessageDialog(this, "Complaint assigned to Office of User Equity and Compliance");
            }
            else if (complaint.getStatus().equalsIgnoreCase("AssignedToPoliceOfficer") || complaint.getStatus().equalsIgnoreCase("AssignedToUHCS")|| complaint.getStatus().equalsIgnoreCase("AssignedToRedeye") || complaint.getStatus().equalsIgnoreCase("AssignedToOUEC"))
            {
                JOptionPane.showMessageDialog(null, "Complaint is already assigned, check Status! select another complaint to assign", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else 
            {
                JOptionPane.showMessageDialog(null, "Case already closed, select another complaint to assign", "Warning", JOptionPane.WARNING_MESSAGE);
            }
         
        }
    }//GEN-LAST:event_btnOUECActionPerformed
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOUEC;
    private javax.swing.JButton btnPoliceOfficer;
    private javax.swing.JButton btnRedeye;
    private javax.swing.JButton btnUhcs;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAssign;
    private javax.swing.JLabel lblHeading;
    private javax.swing.JTable tblComplaints;
    // End of variables declaration//GEN-END:variables
}
