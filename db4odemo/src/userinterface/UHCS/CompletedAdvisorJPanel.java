/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.UHCS;

import Business.Complaint.Complaint;
import Business.EcoSystem;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vignesh Gunasekaran <gunasekaran.v@northeastern.edu>
 */
public class CompletedAdvisorJPanel extends javax.swing.JPanel {
    
    JPanel userProcessContainer;
    UserAccount account;
    EcoSystem system;
    ArrayList<Complaint> complaintListWorkQueue;       //WorkRequest is complaint
    
    /**
     * Creates new form CompletedReceptionist
     */
    public CompletedAdvisorJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem system)  {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;     // logged user; UserAccount has both Employee (basic details) & WorkQueue (complaintlist)
        this.system = system;
        
        complaintListWorkQueue = this.account.getWorkQueue().getComplaintList();
        populateTable();
    }
    
    public void populateTable () {
        
        //newly getting values
        complaintListWorkQueue = this.account.getWorkQueue().getComplaintList();
        
        DefaultTableModel md=(DefaultTableModel)tblCompletedComplaints.getModel();
        md.setRowCount(0);
        Object row[]= new Object[8];
        
        for(Complaint complaintWorkRequest : complaintListWorkQueue){
            
            if (complaintWorkRequest.getStatus()!=null && complaintWorkRequest.getStatus().startsWith("UHCS")) {
            
                if (complaintWorkRequest.getStatus().contains("Completed") || !complaintWorkRequest.getStatus().startsWith("UHCS")) {
                    row[0] = complaintWorkRequest; //in toString it is ID
                    row[1] = complaintWorkRequest.getTypeOfComplaint();
                    row[2] = complaintWorkRequest.getVictimStudent().getName();
                    row[3] = complaintWorkRequest.getDateOfIncident();
                    row[4] = complaintWorkRequest.getTypeOfIncident();
                    row[5] = complaintWorkRequest.getDescription();
                    row[6] = complaintWorkRequest.getDoctorFeedback(); 
                    row[7] = complaintWorkRequest.getStatus();
                     
                    md.addRow(row);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        btnRefreshStatus = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCompletedComplaints = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();

        lblTitle.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Completed Compliant Lists");

        btnRefreshStatus.setText("Refresh Status");
        btnRefreshStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshStatusActionPerformed(evt);
            }
        });

        tblCompletedComplaints.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Type of Complaint", "Victim", "Date Of Incident", "Type of Incident", "Description", "Feedback", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCompletedComplaints.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(tblCompletedComplaints);

        btnBack.setText("<-- Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRefreshStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(136, 136, 136))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(btnBack)
                        .addGap(129, 129, 129)
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 916, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnBack)))
                .addGap(18, 18, 18)
                .addComponent(btnRefreshStatus)
                .addGap(44, 44, 44)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(89, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRefreshStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshStatusActionPerformed

        // clear selected table
        DefaultTableModel model = (DefaultTableModel) tblCompletedComplaints.getModel();
        model.setRowCount(0);

        //repopulates main table
        populateTable();
    }//GEN-LAST:event_btnRefreshStatusActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

         // clear table
        DefaultTableModel model = (DefaultTableModel) tblCompletedComplaints.getModel();
        model.setRowCount(0);

        //back page
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRefreshStatus;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblCompletedComplaints;
    // End of variables declaration//GEN-END:variables
}
